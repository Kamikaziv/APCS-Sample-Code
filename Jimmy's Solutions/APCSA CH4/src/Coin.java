/** *	Coin.java   (Directions)          *	@author Lewis and Loftus *	@version 9/27/2007  11/19/13 * *  Represents a coin with two sides that can be flipped. */public class Coin{    public final int HEADS = 0;    public final int TAILS = 1;        private int value;    private int face;    private double bias;    /**     *   Sets up the coin by flipping it initially.     */    public Coin ()    {        value = 0;        bias = 0.5;        flip();    }        /**     *   Sets up the coin by flipping it initially.     */    public Coin (int coinValue)    {        value = coinValue;        bias = 0.5;        flip();    }    public Coin (double bias)    {    	this.bias = bias;    	value = 0;    	flip();    }    /**     *   Flips the coin by randomly choosing a face.     */    public void flip()    {        face = ((Math.random())<bias)?1:0;    }    /**     *  Returns the current face of the coin as an integer.     *  @return face of the coin as an int     */    public int getFace()    {        return face;    }        /**     *  compares two coins and determines if they are the same     *  @param c the other coin     *  @return boolean value of true or false based on coin value     */    public boolean equals(Coin c)    {        return (this.value == c.value);    }        /**     *   Returns the current face of the coin as a string.     *   @return faceName a String representation of the coin     */    public String toString()    {        String faceName = new String();        	    //determine if face has a value 0 or 1        if (face == HEADS)            faceName = "Heads";        else            faceName = "Tails";        		        return faceName;    }}