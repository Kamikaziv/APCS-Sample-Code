/*** Dates.java (Direction) * @author Lewis/Patel* @version 9/27/10* Determine whether a 2nd-millenium date entered by the user* is valid*          */import java.util.Scanner;public class DatesJIMMYGOTTSHALL{	/**	 * Main Method:	 * @param args	 */	static Scanner scan = new Scanner(System.in);    public static void main(String[] args)    {		int month, day, year;   //date read in from user		int daysInMonth;        //number of days in month 		boolean monthValid, yearValid, dayValid;  //true if input from user is valid		boolean leapYear;  //true if user's year is a leap year				//Get integer month, day, and year from user		month = promptInt("Month: ");		day = promptInt("Date: ");		year=promptInt("Year: ");		//Check to see if month is valid		monthValid = (month>=1&&month<=12);		//Check to see if year is valid		yearValid = (year>=1000&&year<=2050);		//Determine whether it's a leap year		leapYear = (year%4==0);		//Determine number of days in month		if (month==2) {			daysInMonth = (leapYear)?(29):(28);		}else if (month%2==0) {			daysInMonth = 31;		}else {			daysInMonth = 30;		}		//User number of days in month to check to see if day is valid		dayValid = (day<=daysInMonth);		//Determine whether date is valid and print appropriate message		System.out.println((dayValid&&monthValid&&yearValid)?("Date Valid "+((leapYear)?("and it is a Leap Year"):("and it is not a Leap Year"))):("Date Invalid"));	}    public static int promptInt(String phrase) {		int out = 0;		System.out.println(phrase);		out = scan.nextInt();		return out;	}}